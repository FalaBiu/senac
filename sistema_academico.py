from tkinter import *
import tkinter as tk
import tkinter.font as tkFont
from tkinter import messagebox
# FUNÇOES DOS MENUS
def atualizar_dados():
    root = Tk()
    root.title('ATUALIZAR DADOS')
    root.configure(background='#2e8b57')
    barraDeMenus = Menu(root)

    menu_alunos = Menu(barraDeMenus,tearoff=0)
    menu_alunos.add_command(label='Cadastrar aluno', command=cadastrar_aluno)
    menu_alunos.add_command(label='Atualizar notas de aluno')
    menu_alunos.add_command(label='Pesquisar dados de aluno')
    menu_alunos.add_separator()
    menu_alunos.add_command(label='Sair',command=root.quit)
    menuTeste = Menu(menu_alunos,tearoff=0)
    menu_alunos.add_cascade(label="Teste",menu=menuTeste)
    # - FRAME PRINCIPAL
    frame_principal_ca = Frame(root, background="#DCDCDC", highlightthickness=4)
    frame_principal_ca.place(relx=0.00, rely=0.00, relheight=1, relwidth=1)
    textExample1=tk.Label(frame_principal_ca,  text='ATUALIZAR DADOS', anchor=CENTER, fg='#000000', relief=GROOVE, bg='#2E8B57')
    textExample1.pack()
    textExample1.configure(font=("Arial", 35, "bold"), height=2, highlightthickness=1)
    textExample1.place(relwidth=1)
    # - LABELs E INPUTS
    l1 = Label(frame_principal_ca, text="MATRÍCULA ATUAL", relief=GROOVE, bg='#2E8B57')
    l1.place(relx=0.05, rely=0.28, relheight=0.1, relwidth=0.2)
    l1.configure(font=("Arial", 13, "bold"))
    l2 = Label(frame_principal_ca, text="NOVO NOME: ", relief=GROOVE, bg='#2E8B57')
    l2.place(relx=0.05, rely=0.40, relheight=0.07, relwidth=0.2)
    l2.configure(font=("Arial", 10, "bold"))
    l3 = Label(frame_principal_ca, text="NOVO CPF: ", relief=GROOVE, bg='#2E8B57')
    l3.place(relx=0.05, rely=0.49, relheight=0.07, relwidth=0.2)
    l3.configure(font=("Arial", 10, "bold"))
    l4 = Label(frame_principal_ca, text="NOVO TURNO: ", relief=GROOVE, bg='#2E8B57')
    l4.place(relx=0.05, rely=0.58, relheight=0.07, relwidth=0.2)
    l4.configure(font=("Arial", 10, "bold"))
    l5 = Label(frame_principal_ca, text="NOVA SÉRIE: ", relief=GROOVE, bg='#2E8B57')
    l5.place(relx=0.05, rely=0.67, relheight=0.07, relwidth=0.2)
    l5.configure(font=("Arial", 10, "bold"))
    l6 = Label(frame_principal_ca, text="DADOS CADASTRADOS ", relief=GROOVE, bg='#2E8B57')
    l6.place(relx=0.69, rely=0.18, relheight=0.07, relwidth=0.2)
    l6.configure(font=("Arial", 10, "bold"))
    linha = Label(frame_principal_ca, bg='#000000')
    linha.place(relx=0.00, rely=0.16, relheight=0.01, relwidth=1)
    linha.configure(font=("Arial", 10, "bold"))
    mtr_principal = StringVar()
    matricula_principal = Entry(frame_principal_ca, textvariable=mtr_principal)
    matricula_principal.configure(font=("Arial", 15, "bold"))
    matricula_principal.pack()
    matricula_principal.place(relx=0.27, rely=0.29, relheight=0.07, relwidth=0.12)
    name = StringVar()
    nome = Entry(frame_principal_ca, textvariable=name)
    nome.configure(font=("Arial", 15, "bold"))
    nome.pack()
    nome.place(relx=0.27, rely=0.40, relheight=0.07, relwidth=0.2)
    cpff = StringVar()
    cpf = Entry(frame_principal_ca, textvariable=cpff)
    cpf.configure(font=("Arial", 15, "bold"))
    cpf.pack()
    cpf.place(relx=0.27, rely=0.49, relheight=0.07, relwidth=0.2)
    turn = StringVar()
    turno = Entry(frame_principal_ca, textvariable=turn)
    turno.configure(font=("Arial", 15, "bold"))
    turno.pack()
    turno.place(relx=0.27, rely=0.58, relheight=0.07, relwidth=0.2)
    seri = StringVar()
    serie = Entry(frame_principal_ca, textvariable=seri)
    serie.configure(font=("Arial", 15, "bold"))
    serie.pack()
    serie.place(relx=0.27, rely=0.67, relheight=0.07, relwidth=0.2)
    menusecretaria = Menu(barraDeMenus,tearoff=0)
    menusecretaria.add_command(command=root.quit)
    import sqlite3
    conn = sqlite3.connect('sistema_academico.db')
    cur = conn.cursor()
    cur.execute('SELECT * FROM CADASTRO_ALUNO')
    todos = cur.fetchall()
    conn.close()
    scrollbar = Scrollbar(frame_principal_ca)
    scrollbar.pack( side = RIGHT, fill = Y)

    mylist = Listbox(frame_principal_ca, yscrollcommand = scrollbar.set, height=30, width=70)
    mylist.configure(font=("Arial", 9, "bold"), bd=(3))
    for line in todos:
        mylist.insert(END, str(line))
    mylist.pack(fill = NONE, expand=TRUE)
    mylist.place(relx=0.60, rely=0.26)
    scrollbar.config( command = mylist.yview )
    def but_atualizar():
        import sqlite3
        conn = sqlite3.connect('sistema_academico.db')
        cur = conn.cursor()
        sSql = ''
        if matricula_principal.get() != '':
            sSql2 = 'SELECT * FROM CADASTRO_ALUNO WHERE MATRICULA = ' + matricula_principal.get()
            cur.execute('SELECT * FROM CADASTRO_ALUNO WHERE MATRICULA = ' + matricula_principal.get())
            ak = cur.fetchall()
            print(ak)
            matriculaa = ak[0][0]
            print(matriculaa)
            nomee = ak[0][1]
            cpfff = ak[0][2]
            turnoo = ak[0][3]
            seriee = ak[0][4]
            if str(matricula_principal.get()) == str(matriculaa):
                if matricula.get() == "" or nome.get() == '' or cpf.get() == '' or turno.get() == '' or serie.get() == '' or  matricula.get().isnumeric() == False or nome.get().isnumeric() == True or cpf.get().isnumeric() == False or turno.get().isnumeric() == True or serie.get().isnumeric() == False:
                    messagebox.showerror("Erro de preenchimento", "Preencha os campos corretamente.")
                    conn.close()
                else:
                    sSql = 'UPDATE CADASTRO_ALUNO SET ' + 'NOME = "' + nome.get()+ '"' + ',' + 'CPF = '+ cpf.get() + ',' + 'TURNO = "' + turno.get() + '"' + ',' + 'SERIE = ' + serie.get()
                    sSql = sSql + ' WHERE MATRICULA = ' + matricula_principal.get()
                    print(sSql)
                    cur.execute(sSql)
                    conn.commit()
                    matricula_principal.delete(0, "end")
                    matricula.delete(0,"end")
                    nome.delete(0,"end")
                    cpf.delete(0,"end")
                    turno.delete(0,"end")
                    serie.delete(0,"end")
                    messagebox.showinfo('SUCESSO!', 'ATUALIZAÇÃO REALIZADA COM SUCESSO.')
                    conn.close()

        else:
                  messagebox.showerror('ERRO', 'MATRÍCULA NÃO ENCONTRADA. TENTE NOVAMENTE.')
                  conn.close()
    btn_atualizar = Button(frame_principal_ca, height=2, width=10, text="ATUALIZAR", command=but_atualizar)
    btn_atualizar.configure(font=("Arial", 20, "bold"), bg='#2E8B57')
    btn_atualizar.pack()
    btn_atualizar.place(relx=0.08, rely=0.80)
def cadastrar_aluno():
    import sqlite3
    conn = sqlite3.connect('sistema_academico.db')
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS "CADASTRO_ALUNO" ("MATRICULA"	INTEGER NOT NULL,"NOME"	TEXT NOT NULL,"CPF"	INTEGER NOT NULL,"TURNO"	TEXT NOT NULL,"SERIE"	INTEGER NOT NULL,PRIMARY KEY("MATRICULA"));')
    conn.commit()
    ca = Tk()
    ca.title('CADASTRO ALUNO')
    ca.configure(background='#04B1BA')
    barraDeMenus = Menu(ca)
    def setTextInput():
        #INSERT INTO CADASTRO_ALUNO VALUES(1, 'KRL', 83249234, 'MAT', 1)
        if matricula.get() == "" or nome.get() == '' or cpf.get() == '' or turno.get() == '' or serie.get() == '':
            messagebox.showerror("Erro de preenchimento", "Preencha todos os campos.")
        elif matricula.get() != "" and matricula.get().isnumeric == False or nome.get() != '' and nome.get().isnumeric() == True or cpf.get() != '' and cpf.get().isnumeric() == False or turno.get() != '' and turno.get().isnumeric() == True or serie.get() != '' and serie.get().isnumeric() == False:
            messagebox.showerror("Erro de preenchimento", "Preencha os campos numericos com números, e os textuais com textos.")
            matricula.delete(0,"end")
            nome.delete(0,"end")
            cpf.delete(0,"end")
            turno.delete(0,"end")
            serie.delete(0,"end")
        else:
            cur.execute('INSERT INTO CADASTRO_ALUNO VALUES' +'(' + matricula.get() + ', ' + '"' + nome.get() + '"' + ', ' + cpf.get() + ', ' + '"' + turno.get() + '"' +', '+ serie.get() + ');')
            conn.commit()
            matricula.delete(0,"end")
            nome.delete(0,"end")
            cpf.delete(0,"end")
            turno.delete(0,"end")
            serie.delete(0,"end")
    # - MENU ALUNOS
    menu_alunos = Menu(barraDeMenus,tearoff=0)
    menu_alunos.add_command(label='Cadastrar aluno')
    menu_alunos.add_command(label='Atualizar notas de aluno', command=atualizar_dados)
    menu_alunos.add_command(label='Pesquisar dados de aluno')
    menu_alunos.add_separator()
    menu_alunos.add_command(label='Sair',command=ca.quit)
    menuTeste = Menu(menu_alunos,tearoff=0)
    menu_alunos.add_cascade(label="Teste",menu=menuTeste)
    # - FRAME PRINCIPAL
    frame_principal_ca = Frame(ca, background="#FFFFFF", highlightthickness=4)
    frame_principal_ca.place(relx=0.05, rely=0.01, relheight=0.90, relwidth=0.90)
    mtr = StringVar()
    matricula = Entry(frame_principal_ca, textvariable=mtr)
    matricula.configure(font=("Arial", 15, "bold"))
    matricula.pack()
    matricula.place(relx=0.27, rely=0.30, relheight=0.1, relwidth=0.2)
    name = StringVar()
    nome = Entry(frame_principal_ca, textvariable=name)
    nome.configure(font=("Arial", 15, "bold"))
    nome.pack()
    nome.place(relx=0.27, rely=0.41, relheight=0.1, relwidth=0.2)
    cpff = StringVar()
    cpf = Entry(frame_principal_ca, textvariable=cpff)
    cpf.configure(font=("Arial", 15, "bold"))
    cpf.pack()
    cpf.place(relx=0.27, rely=0.52, relheight=0.1, relwidth=0.2)
    turn = StringVar()
    turno = Entry(frame_principal_ca, textvariable=turn)
    turno.configure(font=("Arial", 15, "bold"))
    turno.pack()
    turno.place(relx=0.27, rely=0.63, relheight=0.1, relwidth=0.2)
    seri = StringVar()
    serie = Entry(frame_principal_ca, textvariable=seri)
    serie.configure(font=("Arial", 15, "bold"))
    serie.pack()
    serie.place(relx=0.27, rely=0.74, relheight=0.1, relwidth=0.2)
    btnSet = Button(frame_principal_ca, height=3, width=15, text="CADASTRAR", command=setTextInput)
    btnSet.configure(font=("Arial", 20, "bold"))
    btnSet.pack()
    btnSet.place(relx=0.55, rely=0.45)
    menusecretaria = Menu(barraDeMenus,tearoff=0)
    menusecretaria.add_command(command=ca.quit)


    # - LABELs E INPUTS
    l1 = Label(frame_principal_ca, text="MATRÍCULA: ", relief=GROOVE)
    l1.place(relx=0.05, rely=0.30, relheight=0.1, relwidth=0.2)
    l1.configure(font=("Arial", 10, "bold"))
    l2 = Label(frame_principal_ca, text="NOME: ", relief=GROOVE)
    l2.place(relx=0.05, rely=0.41, relheight=0.1, relwidth=0.2)
    l2.configure(font=("Arial", 10, "bold"))
    l3 = Label(frame_principal_ca, text="CPF: ", relief=GROOVE)
    l3.place(relx=0.05, rely=0.52, relheight=0.1, relwidth=0.2)
    l3.configure(font=("Arial", 10, "bold"))
    l4 = Label(frame_principal_ca, text="TURNO: ", relief=GROOVE)
    l4.place(relx=0.05, rely=0.63, relheight=0.1, relwidth=0.2)
    l4.configure(font=("Arial", 10, "bold"))
    l5 = Label(frame_principal_ca, text="SÉRIE: ", relief=GROOVE)
    l5.place(relx=0.05, rely=0.74, relheight=0.1, relwidth=0.2)
    l5.configure(font=("Arial", 10, "bold"))
        # - ROTULO TITULO
    textExample1=tk.Label(frame_principal_ca, height=10, text='CADASTRAR ALUNO', anchor=CENTER, fg='#04B1BA', relief=GROOVE, bg='#FFFFFF')
    textExample1.pack()
    textExample1.configure(font=("Arial", 35, "bold"), height=2, width=25, highlightthickness=4)

    # - MENU PROFESSORES
    menuProfessores = Menu(barraDeMenus,tearoff=0)
    menuProfessores.add_command(label='Incluir dados de professor')
    menuProfessores.add_command(label='Atualizar dados de professor')
    menuProfessores.add_command(label='Pesquisar por dados de professor')
    menuProfessores.add_separator()
    menuProfessores.add_command(label='Sair',command=ca.quit)

    # - BARRA DE MENUS
    barraDeMenus.add_cascade(label="Alunos",menu=menu_alunos)
    barraDeMenus.add_cascade(label="Professores",menu=menuProfessores)
    barraDeMenus.add_cascade(label="Secretaria",menu=menusecretaria)
    ca.config(menu=barraDeMenus)
    #textExample=tk.Text(root, height=10)
    #textExample.pack()
    #textExample.configure(font=("Letters for Learners", 16, "italic"))
    #nome = Label(frame_principal, textvariable=var, bg='#000000', fg='#04B1BA')
    #var.set('SELECIONE ALGUM DOS MENUS ACIMA')
    txt_intrurivo = Label(frame_principal_ca, relief=RAISED, height=1, width=130, text='ATENÇÃO: Antes de preencher os dados e cadastrar, ir ao menu de "Alunos" e "Pesquisar dados de aluno" para garantir que os dados não estão sendo usados.')
    txt_intrurivo.pack()
    txt_intrurivo.place(rely=0.23, relx=0.03)
    txt_intrurivo.configure(font=("Arial", 11, "bold"))
win = Tk()
win.title('Sistema acadêmico')
win.configure(background='#04B1BA')
barraDeMenus = Menu(win)
# - MENU ALUNOS
menu_alunos = Menu(barraDeMenus,tearoff=0)
menu_alunos.add_command(label='Cadastrar aluno', command=cadastrar_aluno)
menu_alunos.add_command(label='Atualizar dados de aluno', command=atualizar_dados)
menu_alunos.add_command(label='Atualizar notas')
menu_alunos.add_command(label='Pesquisar dados de aluno')
menu_alunos.add_separator()
menu_alunos.add_command(label='Sair',command=win.quit)

menuTeste = Menu(menu_alunos,tearoff=0)
menu_alunos.add_cascade(label="Teste",menu=menuTeste)

# - MENU SECRETARIA
menusecretaria = Menu(barraDeMenus,tearoff=0)
menusecretaria.add_command(command=win.quit)

# - MENU PROFESSORES
menuProfessores = Menu(barraDeMenus,tearoff=0)
menuProfessores.add_command(label='Incluir dados de professor')
menuProfessores.add_command(label='Atualizar dados de professor')
menuProfessores.add_command(label='Pesquisar por dados de professor')
menuProfessores.add_separator()
menuProfessores.add_command(label='Sair',command=win.quit)

# - BARRA DE MENUS
barraDeMenus.add_cascade(label="Alunos",menu=menu_alunos)
barraDeMenus.add_cascade(label="Professores",menu=menuProfessores)
barraDeMenus.add_cascade(label="Secretaria",menu=menusecretaria)
win.config(menu=barraDeMenus)

# - FRAME PRINCIPAL
frame_principal = Frame(win, background="#FFFFFF", highlightthickness=4)
frame_principal.place(relx=0.05, rely=0.01, relheight=0.90, relwidth=0.90)

# - ROTULO TITULO
textExample=tk.Label(frame_principal, text='SISTEMA ACADÊMICO', anchor=CENTER, fg='#04B1BA', relief=GROOVE, bg='#FFFFFF')
textExample.configure(height=2, width=25, highlightthickness=4)
textExample.pack()
fontExample = tkFont.Font(family="Arial", size=35, weight="bold")
textExample.configure(font=fontExample)
#nome = Label(frame_principal, textvariable=var, bg='#000000', fg='#04B1BA')
#var.set('SELECIONE ALGUM DOS MENUS ACIMA')

# - TEXTO INSTRUTIVO
vartxt = StringVar()
txt_intrurivo = Label(frame_principal, textvariable=vartxt, relief=RAISED, height=1, width=120, anchor=CENTER)
vartxt.set("Os menus serão úteis para a navegação. Utilizados para inserção de dados, notas e busca de dados. Basta selecionar a área que deseja interagir.")
txt_intrurivo.pack()



win.mainloop()
